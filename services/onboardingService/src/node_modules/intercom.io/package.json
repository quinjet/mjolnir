{
  "name": "intercom.io",
  "version": "1.0.7",
  "description": "An NodeJS API client for intercom.io",
  "keywords": [
    "api",
    "intercom",
    "node-intercom",
    "client",
    "intercom.io"
  ],
  "author": {
    "name": "Mike McDonald",
    "email": "mcdonald@firebase.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tarunc/intercom.io.git"
  },
  "dependencies": {
    "request": "^2.0.0",
    "qs": "2.3.1",
    "lodash": "2.4.1",
    "debug": "2.1.0",
    "q": "1.0.1"
  },
  "devDependencies": {
    "docker": "~0.2.8",
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "^0.11.0",
    "grunt-docker": "0.0.5",
    "grunt-shell": "~0.3.0",
    "matchdep": "~0.1.1"
  },
  "main": "index",
  "readme": "\n# intercom.io\n\nAn API client in Node.JS for talking to intercom.io. This package implements the complete API for talking with the intercom.io API -- users, messages, impressions, tags, notes.\n\nThere complete docs can be found here - http://docs.intercom.io/api\n\n## Installation\n\nTo install the latest stable release with the command-line tool:\n```sh\nnpm install --save intercom.io\n```\n\n## Usage\n\nSee [docs](http://tarunc.github.io/intercom.io/) for complete API documentation and the [intercom API documentation](http://docs.intercom.io/api).\n\n```javascript\nvar Intercom = require('intercom.io');\n\nvar options = {\n  apiKey: \"your_API_key\",\n  appId: \"your_APP_ID\"\n};\n\nvar intercom = new Intercom(options);\n// Can also be written as:\n// var intercom = new Intercom(\"your_APP_ID\", \"your_API_key\");\n\n// Note: you can also require and create an instance in the same step if you would like.\n// Example:\n// var intercom = require('intercom.io').create(\"your_APP_ID\", \"your_API_key\");\n// or\n// var intercom = require('intercom.io').create(options);\n\n// To create a user\n// Every method supports promises or callbacks.\nintercom.createUser({\n  \"email\" : \"ben@intercom.io\",\n  \"user_id\" : \"7902\",\n  \"name\" : \"Ben McRedmond\",\n  \"created_at\" : 1257553080,\n  \"custom_data\" : {\"plan\" : \"pro\"},\n  \"last_seen_ip\" : \"1.2.3.4\",\n  \"last_seen_user_agent\" : \"ie6\",\n  \"companies\" : [\n    {\n      \"id\" : 6,\n      \"name\" : \"Intercom\",\n      \"created_at\" : 103201,\n      \"plan\" : \"Messaging\",\n      \"monthly_spend\" : 50\n    }\n  ],\n  \"last_request_at\" : 1300000000\n}, function(err, res) {\n  // err is an error object if there was an error\n  // res is **JSON** response\n  // In this case:\n  // {\n  //   \"intercom_id\": \"52322b3b5d2dd84f23000169\",\n  //   \"email\": \"ben@intercom.io\",\n  //   \"user_id\": \"7902\",\n  //   \"name\": \"Ben McRedmond\",\n  //   \"created_at\": 1257553080,\n  //   \"last_impression_at\": 1300000000,\n  //   \"custom_data\": {\n  //     \"plan\": \"pro\"\n  //   },\n  // ...\n  // ...\n  // ...\n  //   \"session_count\": 0,\n  //   \"last_seen_ip\": \"1.2.3.4\",\n  //   \"last_seen_user_agent\": \"ie6\",\n  //   \"unsubscribed_from_emails\": false\n  // }\n});\n\n// To get a user\n// (using a promise)\nintercom.getUser({ \"email\": \"ben@intercom.io\" }).then(function(res) {\n  // res is **JSON** response\n  // In this case:\n  // {\n  //   \"intercom_id\": \"52322b396823b17b1100016a\",\n  //   \"email\": \"ben@intercom.io\",\n  //   \"user_id\": \"7902\",\n  //   \"name\": \"Ben McRedmond\",\n  //   \"created_at\": 1257553080,\n  //   \"last_impression_at\": 1300000000,\n  //   \"custom_data\": {\n  //     \"plan\": \"pro\"\n  //   },\n  // ...\n  // ...\n  // ...\n  //   \"session_count\": 0,\n  //   \"last_seen_ip\": \"1.2.3.4\",\n  //   \"last_seen_user_agent\": \"ie6\",\n  //   \"unsubscribed_from_emails\": false\n  // }\n}, function(err) {\n  // err is an error object if there was an error\n});\n\n// To get multiple users\nintercom.getUsers({\n  page: 1,\n  per_page: 500,\n  tag_id: 7002,\n  tag_name: \"me\"\n}, function (err, res) {\n  // err is an error object\n  // res is the **JSON** response\n  // {\n  //   \"users\": [\n  //     {\n  //       \"intercom_id\": \"52322b366823b173eb000170\",\n  //       \"email\": \"first.user@example.com\",\n  //       \"user_id\": \"123\",\n  //       \"name\": \"First User\",\n  //       \"created_at\": 1270000000,\n  //       \"last_impression_at\": 1300000000,\n  //       \"custom_data\": {\n  //         \"app_name\": \"Genesis\",\n  // ...\n  // ...\n  // ...\n  //       \"last_seen_user_agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11\",\n  //       \"unsubscribed_from_emails\": false\n  //     }\n  //   ],\n  //   \"total_count\": 3,\n  //   \"page\": 1,\n  //   \"next_page\": null,\n  //   \"previous_page\": null,\n  //   \"total_pages\": 1\n  // }\n});\n```\n\nList of supported methods:\n```javascript\n* intercom.getUsers\n* intercom.getUser\n* intercom.viewUser\n* intercom.createUser\n* intercom.updateUser\n* intercom.deleteUser\n* intercom.bulkAddUsers\n* intercom.listCompanies\n* intercom.createCompany\n* intercom.updateCompany\n* intercom.viewCompany\n* intercom.listCompanyUsers\n* intercom.listAdmins\n* intercom.createNote\n* intercom.listNotes\n* intercom.viewNote\n* intercom.getTag\n* intercom.createTag\n* intercom.updateTag\n* intercom.listSegments\n* intercom.viewSegment\n* intercom.createEvent\n* intercom.getCounts\n* intercom.createUserMessage\n```\n\nSee [docs](http://tarunc.github.io/intercom.io/) for complete API documentation and the [intercom API documentation](http://docs.intercom.io/api). See tests for more examples.\n\n__Note__: Every method returns a promise but accepts callbacks too.\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Mike McDonald &lt;mcdonald@firebase.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/tarunc/intercom.io/issues"
  },
  "homepage": "https://github.com/tarunc/intercom.io",
  "_id": "intercom.io@1.0.7",
  "_shasum": "ce4c761b96253f2128341bfbdb225360404673a1",
  "_from": "intercom.io@",
  "_resolved": "https://registry.npmjs.org/intercom.io/-/intercom.io-1.0.7.tgz"
}
